 - custom_case.txt
 - Sijia Zhong szhong16@ucsc.edu
 - Rob Lodes rlodes@ucsc.edu

Given 30 seconds we were able to achieve 2553600 rails.

To implement the custom case test we decided to see hom many rails we could make in 30 seconds. First we attempted to increase the number of rails we could make. We found that a single increase could only go to around 100. We were able to make many statements to make more, but that didn't seem like the best way to proceed. Danial suggested have more have enough statements, and here we were able to have 19 of them before failure. Wrapped in a time function we were able to run this in a while statement that checked how many until we hit 30 seconds. Our best count on an i9 MacBook Pro with 32gb of ram running python 3.9 produced 2553600 rails.

Here is the code we used for this test:

    count = 0
	start = time.time()
	while time.time() - start < 30:
		pyhop.pyhop(state, [('have_enough', 'agent', 'cart', 1), ('have_enough', 'agent', 'rail', 100),
							('have_enough', 'agent', 'rail', 100),
							('have_enough', 'agent', 'rail', 100),
							('have_enough', 'agent', 'rail', 100),
							('have_enough', 'agent', 'rail', 100),
							('have_enough', 'agent', 'rail', 100),
							('have_enough', 'agent', 'rail', 100),
							('have_enough', 'agent', 'rail', 100),
							('have_enough', 'agent', 'rail', 100),
							('have_enough', 'agent', 'rail', 100),
							('have_enough', 'agent', 'rail', 100),
							('have_enough', 'agent', 'rail', 100),
							('have_enough', 'agent', 'rail', 100),
							('have_enough', 'agent', 'rail', 100),
							('have_enough', 'agent', 'rail', 100),
							('have_enough', 'agent', 'rail', 100),
							('have_enough', 'agent', 'rail', 100),
							('have_enough', 'agent', 'rail', 100),
							('have_enough', 'agent', 'rail', 100)
							], verbose=0)

		count = count + 1900
	print(count)